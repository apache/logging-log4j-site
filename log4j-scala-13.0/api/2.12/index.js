Index.PACKAGES = {"org.apache.logging" : [], "org.apache.logging.log4j" : [], "org.apache" : [], "org.apache.logging.log4j.scala" : [{"name" : "org.apache.logging.log4j.scala.Logger", "shortDescription" : "Factory for Loggers.", "object" : "org\/apache\/logging\/log4j\/scala\/Logger$.html", "members_class" : [{"label" : "logMessage", "tail" : "(level: Level, marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.logMessage", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#logMessage(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "def"}, {"label" : "logMessage", "tail" : "(level: Level, marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.logMessage", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#logMessage(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "def"}, {"label" : "logMessage", "tail" : "(level: Level, marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.logMessage", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#logMessage(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "def"}, {"label" : "catching", "tail" : "(level: Level, t: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.catching", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#catching(level:org.apache.logging.log4j.Level,t:Throwable):Unit", "kind" : "def"}, {"label" : "catching", "tail" : "(t: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.catching", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#catching(t:Throwable):Unit", "kind" : "def"}, {"label" : "throwing", "tail" : "(level: Level, t: T): T", "member" : "org.apache.logging.log4j.scala.Logger.throwing", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#throwing[T<:Throwable](level:org.apache.logging.log4j.Level,t:T):T", "kind" : "def"}, {"label" : "throwing", "tail" : "(t: T): T", "member" : "org.apache.logging.log4j.scala.Logger.throwing", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#throwing[T<:Throwable](t:T):T", "kind" : "def"}, {"label" : "traceExit", "tail" : "(message: Message, result: R): R", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit[R](message:org.apache.logging.log4j.message.Message,result:R):R", "kind" : "def"}, {"label" : "traceExit", "tail" : "(entryMessage: EntryMessage, result: R): R", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit[R](entryMessage:org.apache.logging.log4j.message.EntryMessage,result:R):R", "kind" : "def"}, {"label" : "traceExit", "tail" : "(entryMessage: EntryMessage): Unit", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit(entryMessage:org.apache.logging.log4j.message.EntryMessage):Unit", "kind" : "def"}, {"label" : "traceExit", "tail" : "(result: R): R", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit[R](result:R):R", "kind" : "def"}, {"label" : "traceExit", "tail" : "(): Unit", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit():Unit", "kind" : "def"}, {"label" : "traceEntry", "tail" : "(message: Message): EntryMessage", "member" : "org.apache.logging.log4j.scala.Logger.traceEntry", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceEntry(message:org.apache.logging.log4j.message.Message):org.apache.logging.log4j.message.EntryMessage", "kind" : "def"}, {"label" : "traceEntry", "tail" : "(params: AnyRef*): EntryMessage", "member" : "org.apache.logging.log4j.scala.Logger.traceEntry", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceEntry(params:AnyRef*):org.apache.logging.log4j.message.EntryMessage", "kind" : "def"}, {"label" : "traceEntry", "tail" : "(): EntryMessage", "member" : "org.apache.logging.log4j.scala.Logger.traceEntry", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceEntry():org.apache.logging.log4j.message.EntryMessage", "kind" : "def"}, {"label" : "apply", "tail" : "(level: Level, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "delegate", "tail" : ": ExtendedLogger", "member" : "org.apache.logging.log4j.scala.Logger.delegate", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#delegate:org.apache.logging.log4j.spi.ExtendedLogger", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(delegate: ExtendedLogger): Logger", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#apply(delegate:org.apache.logging.log4j.spi.ExtendedLogger):org.apache.logging.log4j.scala.Logger", "kind" : "def"}, {"label" : "apply", "tail" : "(clazz: Class[_]): Logger", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#apply(clazz:Class[_]):org.apache.logging.log4j.scala.Logger", "kind" : "def"}, {"label" : "FQCN", "tail" : ": String", "member" : "org.apache.logging.log4j.scala.Logger.FQCN", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#FQCN:String", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/logging\/log4j\/scala\/Logger.html", "kind" : "object"}, {"name" : "org.apache.logging.log4j.scala.Logging", "members_trait" : [{"label" : "logger", "tail" : ": Logger", "member" : "org.apache.logging.log4j.scala.Logging.logger", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#logger:org.apache.logging.log4j.scala.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Mix in this trait into classes from which you want to log,give you a logger value with a Logger named according to the class.", "trait" : "org\/apache\/logging\/log4j\/scala\/Logging.html", "kind" : "trait"}, {"name" : "org.apache.logging.log4j.scala.LoggingContext", "shortDescription" : "Manages the context data (context map, MDC) that is added to log events.", "object" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html", "members_object" : [{"label" : "MappedValues", "tail" : "", "member" : "scala.collection.MapLike.MappedValues", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#MappedValues[W<:<?>]extendsAbstractMap[K,W]withDefaultMap[K,W]", "kind" : "class"}, {"label" : "FilteredKeys", "tail" : "", "member" : "scala.collection.MapLike.FilteredKeys", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#FilteredKeysextendsAbstractMap[K,V]withDefaultMap[K,V]", "kind" : "class"}, {"label" : "DefaultValuesIterable", "tail" : "", "member" : "scala.collection.MapLike.DefaultValuesIterable", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#DefaultValuesIterableextendsAbstractIterable[V]withIterable[V]withSerializable", "kind" : "class"}, {"label" : "DefaultKeySet", "tail" : "", "member" : "scala.collection.MapLike.DefaultKeySet", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#DefaultKeySetextendsAbstractSet[K]withSet[K]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.apache.logging.log4j.scala.LoggingContext.isEmpty", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.apache.logging.log4j.scala.LoggingContext.size", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#size:Int", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((String, String)) ⇒ U): Unit", "member" : "org.apache.logging.log4j.scala.LoggingContext.foreach", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#foreach[U](f:((String,String))=>U):Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[(String, String)]", "member" : "org.apache.logging.log4j.scala.LoggingContext.iterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#iterator:Iterator[(String,String)]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String): Option[String]", "member" : "org.apache.logging.log4j.scala.LoggingContext.get", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#get(key:String):Option[String]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: String): Boolean", "member" : "org.apache.logging.log4j.scala.LoggingContext.contains", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#contains(key:String):Boolean", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "org.apache.logging.log4j.scala.LoggingContext.clear", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#clear():Unit", "kind" : "def"}, {"label" : "--=", "tail" : "(xs: TraversableOnce[String]): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.--=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#--=(xs:TraversableOnce[String]):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: String, elem2: String, elems: String*): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.-=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-=(elem1:String,elem2:String,elems:String*):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "-=", "tail" : "(key: String): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.-=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-=(key:String):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[(String, String)]): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.++=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++=(xs:TraversableOnce[(String,String)]):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: (String, String), elem2: (String, String), elems: (String, String)*): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.+=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+=(elem1:(String,String),elem2:(String,String),elems:(String,String)*):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "+=", "tail" : "(kv: (String, String)): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.+=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+=(kv:(String,String)):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "withDefaultValue", "tail" : "(d: String): Map[String, String]", "member" : "scala.collection.mutable.Map.withDefaultValue", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#withDefaultValue(d:V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(d: (String) ⇒ String): Map[String, String]", "member" : "scala.collection.mutable.Map.withDefault", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#withDefault(d:K=>V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "seq", "tail" : "(): Map[String, String]", "member" : "scala.collection.mutable.Map.seq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#seq:scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Map[String, String]", "member" : "scala.collection.mutable.Map.empty", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#empty:scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "--", "tail" : "(xs: GenTraversableOnce[String]): Map[String, String]", "member" : "scala.collection.mutable.MapLike.--", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#--(xs:scala.collection.GenTraversableOnce[K]):This", "kind" : "def"}, {"label" : "-", "tail" : "(elem1: String, elem2: String, elems: String*): Map[String, String]", "member" : "scala.collection.mutable.MapLike.-", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-(elem1:K,elem2:K,elems:K*):This", "kind" : "def"}, {"label" : "result", "tail" : "(): Map[String, String]", "member" : "scala.collection.mutable.MapLike.result", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#result():This", "kind" : "def"}, {"label" : "clone", "tail" : "(): Map[String, String]", "member" : "scala.collection.mutable.MapLike.clone", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#clone():This", "kind" : "def"}, {"label" : "retain", "tail" : "(p: (String, String) ⇒ Boolean): LoggingContext.this.type", "member" : "scala.collection.mutable.MapLike.retain", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#retain(p:(K,V)=>Boolean):MapLike.this.type", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (String, String) ⇒ String): LoggingContext.this.type", "member" : "scala.collection.mutable.MapLike.transform", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#transform(f:(K,V)=>V):MapLike.this.type", "kind" : "def"}, {"label" : "getOrElseUpdate", "tail" : "(key: String, op: ⇒ String): String", "member" : "scala.collection.mutable.MapLike.getOrElseUpdate", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#getOrElseUpdate(key:K,op:=>V):V", "kind" : "def"}, {"label" : "-", "tail" : "(key: String): Map[String, String]", "member" : "scala.collection.mutable.MapLike.-", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-(key:K):This", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Option[String]", "member" : "scala.collection.mutable.MapLike.remove", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#remove(key:K):Option[V]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: GenTraversableOnce[(String, V1)]): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.++", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++[V1>:V](xs:scala.collection.GenTraversableOnce[(K,V1)]):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: (String, V1), elem2: (String, V1), elems: (String, V1)*): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.+", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+[V1>:V](elem1:(K,V1),elem2:(K,V1),elems:(K,V1)*):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(kv: (String, V1)): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.+", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+[V1>:V](kv:(K,V1)):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "updated", "tail" : "(key: String, value: V1): Map[String, V1]", "member" : "scala.collection.mutable.MapLike.updated", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#updated[V1>:V](key:K,value:V1):scala.collection.mutable.Map[K,V1]", "kind" : "def"}, {"label" : "update", "tail" : "(key: String, value: String): Unit", "member" : "scala.collection.mutable.MapLike.update", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#update(key:K,value:V):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(key: String, value: String): Option[String]", "member" : "scala.collection.mutable.MapLike.put", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#put(key:K,value:V):Option[V]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(String, String)]", "member" : "scala.collection.mutable.MapLike.toSeq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toSeq:Seq[(K,V)]", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[(String, String), ParMap[String, String]]", "member" : "scala.collection.mutable.MapLike.parCombiner", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#parCombiner:scala.collection.parallel.Combiner[(K,V),scala.collection.parallel.mutable.ParMap[K,V]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[(String, String), Map[String, String]]", "member" : "scala.collection.mutable.MapLike.newBuilder", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#newBuilder:scala.collection.mutable.Builder[(K,V),This]", "kind" : "def"}, {"label" : "mapResult", "tail" : "(f: (Map[String, String]) ⇒ NewTo): Builder[(String, String), NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.MapLike.toString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.MapLike.stringPrefix", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#stringPrefix:String", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.MapLike.addString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[E]", "member" : "scala.collection.MapLike.toBuffer", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toBuffer[E>:(K,V)]:scala.collection.mutable.Buffer[E]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: ((String, String)) ⇒ Boolean): Map[String, String]", "member" : "scala.collection.MapLike.filterNot", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#filterNot(p:((K,V))=>Boolean):This", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (String) ⇒ W): Map[String, W]", "member" : "scala.collection.MapLike.mapValues", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mapValues[W](f:V=>W):scala.collection.Map[K,W]", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(p: (String) ⇒ Boolean): Map[String, String]", "member" : "scala.collection.MapLike.filterKeys", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#filterKeys(p:K=>Boolean):scala.collection.Map[K,V]", "kind" : "def"}, {"label" : "default", "tail" : "(key: String): String", "member" : "scala.collection.MapLike.default", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#default(key:K):V", "kind" : "def"}, {"label" : "valuesIterator", "tail" : "(): Iterator[String]", "member" : "scala.collection.MapLike.valuesIterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#valuesIterator:Iterator[V]", "kind" : "def"}, {"label" : "values", "tail" : "(): Iterable[String]", "member" : "scala.collection.MapLike.values", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#values:Iterable[V]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Iterable[String]", "member" : "scala.collection.MapLike.keys", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#keys:Iterable[K]", "kind" : "def"}, {"label" : "keysIterator", "tail" : "(): Iterator[String]", "member" : "scala.collection.MapLike.keysIterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#keysIterator:Iterator[K]", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[String]", "member" : "scala.collection.MapLike.keySet", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#keySet:scala.collection.Set[K]", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: K1, default: (K1) ⇒ V1): V1", "member" : "scala.collection.MapLike.applyOrElse", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#applyOrElse[K1<:K,V1>:V](x:K1,default:K1=>V1):V1", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(key: String): Boolean", "member" : "scala.collection.MapLike.isDefinedAt", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isDefinedAt(key:K):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String): String", "member" : "scala.collection.MapLike.apply", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#apply(key:K):V", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(key: String, default: ⇒ V1): V1", "member" : "scala.collection.MapLike.getOrElse", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#getOrElse[V1>:V](key:K,default:=>V1):V1", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (String) ⇒ U): (String) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "lift", "tail" : "(): (String) ⇒ Option[String]", "member" : "scala.PartialFunction.lift", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (String) ⇒ C): PartialFunction[String, C]", "member" : "scala.PartialFunction.andThen", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ String): (A) ⇒ String", "member" : "scala.Function1.compose", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenMapLike.equals", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.GenMapLike.hashCode", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.mutable.Iterable.companion", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#companion:scala.collection.generic.GenericCompanion[scala.collection.mutable.Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[(String, String), Map[String, String]]", "member" : "scala.collection.IterableLike.view", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[(String, String), Map[String, String]]", "member" : "scala.collection.IterableLike.view", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[(String, String)]", "member" : "scala.collection.IterableLike.toStream", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Map[String, String], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Map[String, String], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Map[String, String], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableLike.dropRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableLike.takeRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Map[String, String]]", "member" : "scala.collection.IterableLike.sliding", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Map[String, String]]", "member" : "scala.collection.IterableLike.sliding", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Map[String, String]]", "member" : "scala.collection.IterableLike.grouped", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((String, String)) ⇒ Boolean): Map[String, String]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableLike.drop", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableLike.take", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Map[String, String]", "member" : "scala.collection.IterableLike.slice", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): (String, String)", "member" : "scala.collection.IterableLike.head", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(String, String)]", "member" : "scala.collection.IterableLike.toIterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[(String, String)]", "member" : "scala.collection.IterableLike.toIterable", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((String, String), B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((String, String), B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((String, String)) ⇒ Boolean): Option[(String, String)]", "member" : "scala.collection.IterableLike.find", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((String, String)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((String, String)) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Map[String, String]): Iterable[(String, String)]", "member" : "scala.collection.IterableLike.toCollection", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[(String, String)]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: ((String, String)) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: ((String, String)) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((String, String)) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((String, String)) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((String, String)) ⇒ Boolean): FilterMonadic[(String, String), Map[String, String]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, (String, String), Col[(String, String)]]): Col[(String, String)]", "member" : "scala.collection.TraversableLike.to", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(String, String)]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Map[String, String]]", "member" : "scala.collection.TraversableLike.inits", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Map[String, String]]", "member" : "scala.collection.TraversableLike.tails", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Map[String, String], Map[String, String])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((String, String)) ⇒ Boolean): (Map[String, String], Map[String, String])", "member" : "scala.collection.TraversableLike.span", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((String, String)) ⇒ Boolean): Map[String, String]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Map[String, String]", "member" : "scala.collection.TraversableLike.init", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(String, String)]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (String, String)", "member" : "scala.collection.TraversableLike.last", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Map[String, String]", "member" : "scala.collection.TraversableLike.tail", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(String, String)]", "member" : "scala.collection.TraversableLike.headOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((String, String), B) ⇒ B)(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (String, String)) ⇒ B)(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((String, String)) ⇒ K): Map[K, Map[String, String]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((String, String)) ⇒ Boolean): (Map[String, String], Map[String, String])", "member" : "scala.collection.TraversableLike.partition", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(String, String), B])(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filter", "tail" : "(p: ((String, String)) ⇒ Boolean): Map[String, String]", "member" : "scala.collection.TraversableLike.filter", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((String, String)) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((String, String)) ⇒ B)(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Map[String, String], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Map[String, String]", "member" : "scala.collection.TraversableLike.repr", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParMap[String, String]", "member" : "scala.collection.Parallelizable.par", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(String, String), (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(String, String)]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(String, String)]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(String, String)]", "member" : "scala.collection.TraversableOnce.toList", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((String, String)) ⇒ B)(cmp: Ordering[B]): (String, String)", "member" : "scala.collection.TraversableOnce.minBy", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((String, String)) ⇒ B)(cmp: Ordering[B]): (String, String)", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): (String, String)", "member" : "scala.collection.TraversableOnce.max", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): (String, String)", "member" : "scala.collection.TraversableOnce.min", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, (String, String)) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((String, String), B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (String, String)) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (String, String)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (String, String)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((String, String), B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (String, String)) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(String, String), B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((String, String)) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[(String, String)]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org" : []};