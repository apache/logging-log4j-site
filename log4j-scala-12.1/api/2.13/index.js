Index.PACKAGES = {"org.apache.logging" : [], "org.apache.logging.log4j" : [], "org.apache" : [], "org.apache.logging.log4j.scala" : [{"name" : "org.apache.logging.log4j.scala.Logger", "shortDescription" : "Factory for Loggers.", "object" : "org\/apache\/logging\/log4j\/scala\/Logger$.html", "members_class" : [{"label" : "logMessage", "tail" : "(level: Level, marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.logMessage", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#logMessage(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "def"}, {"label" : "logMessage", "tail" : "(level: Level, marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.logMessage", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#logMessage(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "def"}, {"label" : "logMessage", "tail" : "(level: Level, marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.logMessage", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#logMessage(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "def"}, {"label" : "catching", "tail" : "(level: Level, t: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.catching", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#catching(level:org.apache.logging.log4j.Level,t:Throwable):Unit", "kind" : "def"}, {"label" : "catching", "tail" : "(t: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.catching", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#catching(t:Throwable):Unit", "kind" : "def"}, {"label" : "throwing", "tail" : "(level: Level, t: T): T", "member" : "org.apache.logging.log4j.scala.Logger.throwing", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#throwing[T<:Throwable](level:org.apache.logging.log4j.Level,t:T):T", "kind" : "def"}, {"label" : "throwing", "tail" : "(t: T): T", "member" : "org.apache.logging.log4j.scala.Logger.throwing", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#throwing[T<:Throwable](t:T):T", "kind" : "def"}, {"label" : "traceExit", "tail" : "(message: Message, result: R): R", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit[R](message:org.apache.logging.log4j.message.Message,result:R):R", "kind" : "def"}, {"label" : "traceExit", "tail" : "(entryMessage: EntryMessage, result: R): R", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit[R](entryMessage:org.apache.logging.log4j.message.EntryMessage,result:R):R", "kind" : "def"}, {"label" : "traceExit", "tail" : "(entryMessage: EntryMessage): Unit", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit(entryMessage:org.apache.logging.log4j.message.EntryMessage):Unit", "kind" : "def"}, {"label" : "traceExit", "tail" : "(result: R): R", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit[R](result:R):R", "kind" : "def"}, {"label" : "traceExit", "tail" : "(): Unit", "member" : "org.apache.logging.log4j.scala.Logger.traceExit", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceExit():Unit", "kind" : "def"}, {"label" : "traceEntry", "tail" : "(message: Message): EntryMessage", "member" : "org.apache.logging.log4j.scala.Logger.traceEntry", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceEntry(message:org.apache.logging.log4j.message.Message):org.apache.logging.log4j.message.EntryMessage", "kind" : "def"}, {"label" : "traceEntry", "tail" : "(params: AnyRef*): EntryMessage", "member" : "org.apache.logging.log4j.scala.Logger.traceEntry", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceEntry(params:AnyRef*):org.apache.logging.log4j.message.EntryMessage", "kind" : "def"}, {"label" : "traceEntry", "tail" : "(): EntryMessage", "member" : "org.apache.logging.log4j.scala.Logger.traceEntry", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#traceEntry():org.apache.logging.log4j.message.EntryMessage", "kind" : "def"}, {"label" : "apply", "tail" : "(level: Level, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "apply", "tail" : "(level: Level, marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#apply(level:org.apache.logging.log4j.Level,marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "trace", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.trace", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#trace(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "debug", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.debug", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#debug(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "info", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.info", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#info(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "warn", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.warn", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#warn(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "error", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.error", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#error(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: AnyRef, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:AnyRef,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: CharSequence, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:CharSequence,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: Message, cause: Throwable): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message,cause:Throwable):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: AnyRef): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:AnyRef):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: CharSequence): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:CharSequence):Unit", "kind" : "macro def"}, {"label" : "fatal", "tail" : "(marker: Marker, message: Message): Unit", "member" : "org.apache.logging.log4j.scala.Logger.fatal", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#fatal(marker:org.apache.logging.log4j.Marker,message:org.apache.logging.log4j.message.Message):Unit", "kind" : "macro def"}, {"label" : "delegate", "tail" : ": ExtendedLogger", "member" : "org.apache.logging.log4j.scala.Logger.delegate", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#delegate:org.apache.logging.log4j.spi.ExtendedLogger", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "org\/apache\/logging\/log4j\/scala\/Logger.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(delegate: ExtendedLogger): Logger", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#apply(delegate:org.apache.logging.log4j.spi.ExtendedLogger):org.apache.logging.log4j.scala.Logger", "kind" : "def"}, {"label" : "apply", "tail" : "(clazz: Class[_]): Logger", "member" : "org.apache.logging.log4j.scala.Logger.apply", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#apply(clazz:Class[_]):org.apache.logging.log4j.scala.Logger", "kind" : "def"}, {"label" : "FQCN", "tail" : ": String", "member" : "org.apache.logging.log4j.scala.Logger.FQCN", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#FQCN:String", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/logging\/log4j\/scala\/Logger.html", "kind" : "object"}, {"name" : "org.apache.logging.log4j.scala.Logging", "trait" : "org\/apache\/logging\/log4j\/scala\/Logging.html", "kind" : "trait", "members_trait" : [{"label" : "logger", "tail" : ": Logger", "member" : "org.apache.logging.log4j.scala.Logging.logger", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#logger:org.apache.logging.log4j.scala.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/Logging.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Mix in this trait into classes from which you want to log,give you a logger value with a Logger named according to the class."}, {"name" : "org.apache.logging.log4j.scala.LoggingContext", "shortDescription" : "Manages the context data (context map, MDC) that is added to log events.", "object" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html", "members_object" : [{"label" : "GenKeySet", "tail" : "", "member" : "scala.collection.MapOps.GenKeySet", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#GenKeySetextendsAnyRef", "kind" : "trait"}, {"label" : "KeySet", "tail" : "", "member" : "scala.collection.MapOps.KeySet", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#KeySetextendsAbstractSet[K]withMapOps.this.GenKeySetwithDefaultSerializable", "kind" : "class"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.apache.logging.log4j.scala.LoggingContext.isEmpty", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.apache.logging.log4j.scala.LoggingContext.size", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#size:Int", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((String, String)) => U): Unit", "member" : "org.apache.logging.log4j.scala.LoggingContext.foreach", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#foreach[U](f:((String,String))=>U):Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[(String, String)]", "member" : "org.apache.logging.log4j.scala.LoggingContext.iterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#iterator:Iterator[(String,String)]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String): Option[String]", "member" : "org.apache.logging.log4j.scala.LoggingContext.get", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#get(key:String):Option[String]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: String): Boolean", "member" : "org.apache.logging.log4j.scala.LoggingContext.contains", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#contains(key:String):Boolean", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "org.apache.logging.log4j.scala.LoggingContext.clear", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#clear():Unit", "kind" : "def"}, {"label" : "subtractAll", "tail" : "(xs: IterableOnce[String]): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.subtractAll", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#subtractAll(xs:IterableOnce[String]):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: String, elem2: String, elems: String*): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.-=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-=(elem1:String,elem2:String,elems:String*):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "subtractOne", "tail" : "(key: String): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.subtractOne", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#subtractOne(key:String):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "addAll", "tail" : "(xs: IterableOnce[(String, String)]): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.addAll", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addAll(xs:IterableOnce[(String,String)]):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(kv: (String, String)): LoggingContext.this.type", "member" : "org.apache.logging.log4j.scala.LoggingContext.addOne", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addOne(kv:(String,String)):org.apache.logging.log4j.scala.LoggingContext.type", "kind" : "def"}, {"label" : "withDefaultValue", "tail" : "(d: String): Map[String, String]", "member" : "scala.collection.mutable.Map.withDefaultValue", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#withDefaultValue(d:V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(d: (String) => String): Map[String, String]", "member" : "scala.collection.mutable.Map.withDefault", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#withDefault(d:K=>V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "mapFactory", "tail" : "(): MapFactory[Map]", "member" : "scala.collection.mutable.Map.mapFactory", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mapFactory:scala.collection.MapFactory[scala.collection.mutable.Map]", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.MapOps.knownSize", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#knownSize:Int", "kind" : "def"}, {"label" : "updated", "tail" : "(key: String, value: V1): Map[String, V1]", "member" : "scala.collection.mutable.MapOps.updated", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#updated[V1>:V](key:K,value:V1):CC[K,V1]", "kind" : "def"}, {"label" : "mapValuesInPlace", "tail" : "(f: (String, String) => String): LoggingContext.this.type", "member" : "scala.collection.mutable.MapOps.mapValuesInPlace", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mapValuesInPlace(f:(K,V)=>V):MapOps.this.type", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (String, String) => String): LoggingContext.this.type", "member" : "scala.collection.mutable.MapOps.transform", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#transform(f:(K,V)=>V):MapOps.this.type", "kind" : "final def"}, {"label" : "filterInPlace", "tail" : "(p: (String, String) => Boolean): LoggingContext.this.type", "member" : "scala.collection.mutable.MapOps.filterInPlace", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#filterInPlace(p:(K,V)=>Boolean):MapOps.this.type", "kind" : "def"}, {"label" : "retain", "tail" : "(p: (String, String) => Boolean): LoggingContext.this.type", "member" : "scala.collection.mutable.MapOps.retain", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#retain(p:(K,V)=>Boolean):MapOps.this.type", "kind" : "final def"}, {"label" : "clone", "tail" : "(): Map[String, String]", "member" : "scala.collection.mutable.MapOps.clone", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#clone():C", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Option[String]", "member" : "scala.collection.mutable.MapOps.remove", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#remove(key:K):Option[V]", "kind" : "def"}, {"label" : "getOrElseUpdate", "tail" : "(key: String, op: => String): String", "member" : "scala.collection.mutable.MapOps.getOrElseUpdate", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#getOrElseUpdate(key:K,op:=>V):V", "kind" : "def"}, {"label" : "updateWith", "tail" : "(key: String)(remappingFunction: (Option[String]) => Option[String]): Option[String]", "member" : "scala.collection.mutable.MapOps.updateWith", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#updateWith(key:K)(remappingFunction:Option[V]=>Option[V]):Option[V]", "kind" : "def"}, {"label" : "update", "tail" : "(key: String, value: String): Unit", "member" : "scala.collection.mutable.MapOps.update", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#update(key:K,value:V):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(key: String, value: String): Option[String]", "member" : "scala.collection.mutable.MapOps.put", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#put(key:K,value:V):Option[V]", "kind" : "def"}, {"label" : "-", "tail" : "(key1: String, key2: String, keys: String*): Map[String, String]", "member" : "scala.collection.mutable.MapOps.-", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-(key1:K,key2:K,keys:K*):C", "kind" : "final def"}, {"label" : "-", "tail" : "(key: String): Map[String, String]", "member" : "scala.collection.mutable.MapOps.-", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-(key:K):C", "kind" : "final def"}, {"label" : "result", "tail" : "(): Map[String, String]", "member" : "scala.collection.mutable.MapOps.result", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#result():C", "kind" : "def"}, {"label" : "--=", "tail" : "(xs: IterableOnce[String]): LoggingContext.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "-=", "tail" : "(elem: String): LoggingContext.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "mapResult", "tail" : "(f: (Map[String, String]) => NewTo): Builder[(String, String), NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[A,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: Iterable[_]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHintBounded(size:Int,boundingColl:Iterable[_]):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(coll: IterableOnce[_], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHint(coll:scala.collection.IterableOnce[_],delta:Int):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: IterableOnce[(String, String)]): LoggingContext.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++=(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem1: (String, String), elem2: (String, String), elems: (String, String)*): LoggingContext.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: (String, String)): LoggingContext.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Map.toString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Map.stringPrefix", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#stringPrefix:String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Map.hashCode", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Map.equals", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Map.canEqual", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((String, String)) => Boolean): WithFilter[String, String, [x]Iterable[x], [x, y]Map[x, y]]", "member" : "scala.collection.MapFactoryDefaults.withFilter", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#withFilter(p:((K,V))=>Boolean):scala.collection.MapOps.WithFilter[K,V,WithFilterCC,CC]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Map[String, String]", "member" : "scala.collection.MapFactoryDefaults.empty", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#empty:CC[K,V@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[(String, String), Map[String, String]]", "member" : "scala.collection.MapFactoryDefaults.newSpecificBuilder", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#newSpecificBuilder:scala.collection.mutable.Builder[(K,V@scala.annotation.unchecked.uncheckedVariance),CC[K,V@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[(String, String)]): Map[String, String]", "member" : "scala.collection.MapFactoryDefaults.fromSpecific", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#fromSpecific(coll:scala.collection.IterableOnce[(K,V@scala.annotation.unchecked.uncheckedVariance)]):CC[K,V@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[(String, V1)]): Map[String, V1]", "member" : "scala.collection.MapOps.++:", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++:[V1>:V](that:scala.collection.IterableOnce[(K,V1)]):CC[K,V1]", "kind" : "def"}, {"label" : "--", "tail" : "(keys: IterableOnce[String]): Map[String, String]", "member" : "scala.collection.MapOps.--", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#--(keys:scala.collection.IterableOnce[K]):C", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: (String, V1), elem2: (String, V1), elems: (String, V1)*): Map[String, V1]", "member" : "scala.collection.MapOps.+", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+[V1>:V](elem1:(K,V1),elem2:(K,V1),elems:(K,V1)*):CC[K,V1]", "kind" : "def"}, {"label" : "+", "tail" : "(kv: (String, V1)): Map[String, V1]", "member" : "scala.collection.MapOps.+", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#+[V1>:V](kv:(K,V1)):CC[K,V1]", "kind" : "def"}, {"label" : "addString", "tail" : "(sb: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.MapOps.addString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addString(sb:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "++", "tail" : "(xs: IterableOnce[(String, V2)]): Map[String, V2]", "member" : "scala.collection.MapOps.++", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++[V2>:V](xs:scala.collection.IterableOnce[(K,V2)]):CC[K,V2]", "kind" : "def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[(String, V2)]): Map[String, V2]", "member" : "scala.collection.MapOps.concat", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#concat[V2>:V](suffix:scala.collection.IterableOnce[(K,V2)]):CC[K,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((String, String)) => IterableOnce[(K2, V2)]): Map[K2, V2]", "member" : "scala.collection.MapOps.flatMap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#flatMap[K2,V2](f:((K,V))=>scala.collection.IterableOnce[(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(String, String), (K2, V2)]): Map[K2, V2]", "member" : "scala.collection.MapOps.collect", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#collect[K2,V2](pf:PartialFunction[(K,V),(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((String, String)) => (K2, V2)): Map[K2, V2]", "member" : "scala.collection.MapOps.map", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#map[K2,V2](f:((K,V))=>(K2,V2)):CC[K2,V2]", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(key: String): Boolean", "member" : "scala.collection.MapOps.isDefinedAt", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isDefinedAt(key:K):Boolean", "kind" : "def"}, {"label" : "default", "tail" : "(key: String): String", "member" : "scala.collection.MapOps.default", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#default(key:K):V", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (String) => W): MapView[String, W]", "member" : "scala.collection.MapOps.mapValues", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mapValues[W](f:V=>W):scala.collection.MapView[K,W]", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(p: (String) => Boolean): MapView[String, String]", "member" : "scala.collection.MapOps.filterKeys", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#filterKeys(p:K=>Boolean):scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "foreachEntry", "tail" : "(f: (String, String) => U): Unit", "member" : "scala.collection.MapOps.foreachEntry", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#foreachEntry[U](f:(K,V)=>U):Unit", "kind" : "def"}, {"label" : "valuesIterator", "tail" : "(): Iterator[String]", "member" : "scala.collection.MapOps.valuesIterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#valuesIterator:Iterator[V]", "kind" : "def"}, {"label" : "keysIterator", "tail" : "(): Iterator[String]", "member" : "scala.collection.MapOps.keysIterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#keysIterator:Iterator[K]", "kind" : "def"}, {"label" : "values", "tail" : "(): Iterable[String]", "member" : "scala.collection.MapOps.values", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#values:Iterable[V]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Iterable[String]", "member" : "scala.collection.MapOps.keys", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#keys:Iterable[K]", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[String]", "member" : "scala.collection.MapOps.keySet", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#keySet:scala.collection.Set[K]", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: K1, default: (K1) => V1): V1", "member" : "scala.collection.MapOps.applyOrElse", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#applyOrElse[K1<:K,V1>:V](x:K1,default:K1=>V1):V1", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String): String", "member" : "scala.collection.MapOps.apply", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#apply(key:K):V", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(key: String, default: => V1): V1", "member" : "scala.collection.MapOps.getOrElse", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#getOrElse[V1>:V](key:K,default:=>V1):V1", "kind" : "def"}, {"label" : "mapFromIterable", "tail" : "(it: Iterable[(K2, V2)]): Map[K2, V2]", "member" : "scala.collection.MapOps.mapFromIterable", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mapFromIterable[K2,V2](it:Iterable[(K2,V2)]):CC[K2,V2]", "kind" : "final def"}, {"label" : "valueStepper", "tail" : "(shape: StepperShape[String, S]): S", "member" : "scala.collection.MapOps.valueStepper", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#valueStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[V,S]):S", "kind" : "def"}, {"label" : "keyStepper", "tail" : "(shape: StepperShape[String, S]): S", "member" : "scala.collection.MapOps.keyStepper", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#keyStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[K,S]):S", "kind" : "def"}, {"label" : "view", "tail" : "(): MapView[String, String]", "member" : "scala.collection.MapOps.view", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#view:scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (String) => U): (String) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "lift", "tail" : "(): (String) => Option[String]", "member" : "scala.PartialFunction.lift", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, String]): PartialFunction[R, String]", "member" : "scala.PartialFunction.compose", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[String, C]): PartialFunction[String, C]", "member" : "scala.PartialFunction.andThen", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (String) => C): PartialFunction[String, C]", "member" : "scala.PartialFunction.andThen", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[String, String]", "member" : "scala.PartialFunction.elementWise", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: String): Option[String]", "member" : "scala.PartialFunction.unapply", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => String): (A) => String", "member" : "scala.Function1.compose", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.mutable.Iterable.iterableFactory", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#iterableFactory:scala.collection.IterableFactory[scala.collection.mutable.Iterable]", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[(String, String), B, LoggingContext.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): LoggingContext.this.type", "member" : "scala.collection.Iterable.seq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): LoggingContext.this.type", "member" : "scala.collection.Iterable.coll", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): LoggingContext.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: ((String, String)) => U): Map[String, String]", "member" : "scala.collection.IterableOps.tapEach", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Map[String, String]]", "member" : "scala.collection.IterableOps.inits", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Map[String, String]]", "member" : "scala.collection.IterableOps.tails", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((String, String)) => (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((String, String)) => (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterable[((String, String), Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterable[((String, String), B)]", "member" : "scala.collection.IterableOps.zip", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: ((String, String)) => Either[A1, A2]): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(String, String), B]): Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: ((String, String)) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((String, String)) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((String, String)) => B): Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((String, String), B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (String, String)) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: ((String, String)) => K)(f: ((String, String)) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: ((String, String)) => K)(f: ((String, String)) => B): Map[K, Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((String, String)) => K): Map[K, Map[String, String]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Map[String, String]", "member" : "scala.collection.IterableOps.slice", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Map[String, String]", "member" : "scala.collection.IterableOps.init", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Map[String, String]", "member" : "scala.collection.IterableOps.tail", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Map[String, String]]", "member" : "scala.collection.IterableOps.sliding", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Map[String, String]]", "member" : "scala.collection.IterableOps.sliding", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Map[String, String]]", "member" : "scala.collection.IterableOps.grouped", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((String, String)) => Boolean): Map[String, String]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableOps.dropRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableOps.drop", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((String, String)) => Boolean): (Map[String, String], Map[String, String])", "member" : "scala.collection.IterableOps.span", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((String, String)) => Boolean): Map[String, String]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableOps.takeRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Map[String, String]", "member" : "scala.collection.IterableOps.take", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Map[String, String], Map[String, String])", "member" : "scala.collection.IterableOps.splitAt", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((String, String)) => Boolean): (Map[String, String], Map[String, String])", "member" : "scala.collection.IterableOps.partition", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: ((String, String)) => Boolean): Map[String, String]", "member" : "scala.collection.IterableOps.filterNot", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: ((String, String)) => Boolean): Map[String, String]", "member" : "scala.collection.IterableOps.filter", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: ((String, String)) => Iterable[B]): Iterable[Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[(String, String)]", "member" : "scala.collection.IterableOps.view", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(String, String)]", "member" : "scala.collection.IterableOps.lastOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (String, String)", "member" : "scala.collection.IterableOps.last", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(String, String)]", "member" : "scala.collection.IterableOps.headOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): (String, String)", "member" : "scala.collection.IterableOps.head", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Iterable[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Map[String, String]", "member" : "scala.collection.IterableOps.repr", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(String, String)]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[(String, String)]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[(String, String)]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(String, String)]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(String, String)]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(String, String), (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(String, String)]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(String, String)]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(String, String)]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[(String, String), C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: ((String, String), B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, (String, String)) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(String, String), B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: ((String, String)) => B)(cmp: Ordering[B]): Option[(String, String)]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((String, String)) => B)(cmp: Ordering[B]): (String, String)", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: ((String, String)) => B)(cmp: Ordering[B]): Option[(String, String)]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((String, String)) => B)(cmp: Ordering[B]): (String, String)", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[(String, String)]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): (String, String)", "member" : "scala.collection.IterableOnceOps.max", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[(String, String)]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): (String, String)", "member" : "scala.collection.IterableOnceOps.min", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((String, String), B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (String, String)) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((String, String), B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (String, String)) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((String, String), B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (String, String)) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((String, String), B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (String, String)) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((String, String)) => Boolean): Option[(String, String)]", "member" : "scala.collection.IterableOnceOps.find", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((String, String)) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((String, String)) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((String, String)) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[(String, String), S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/logging\/log4j\/scala\/LoggingContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org" : []};